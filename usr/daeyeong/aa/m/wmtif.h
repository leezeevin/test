#ifndef __WMTIF_H_F2DBDC40_6196_4E67_A689_D31A9310BEC0__
#define __WMTIF_H_F2DBDC40_6196_4E67_A689_D31A9310BEC0__

#include <__wcommon.h>
#include <imtif.h>


#include <__nserial.h>
#include <__nsocket.h>
#include <__nwebsocket.h>

enum
{
  _IDC_EDIT_NET_IP = 0,
  _IDC_EDIT_NET_PORT,
  _IDC_COMBO_NET_PROTOCOL,
  _IDC_COMBO_NET_CS,
  _IDC_COMBO_NET_CASTTYPE,
  _IDC_BUTTON_NET_OPEN_CLOSE,
  _IDC_EDIT_NET_WRITE,
  _IDC_BUTTON_NET_WRITE,
  _IDC_CHECK_NET_CR,
  _IDC_CHECK_NET_LF,
  _IDC_COMBO_NET_DISPLAY_TYPE_W,
  _IDC_COMBO_NET_DISPLAY_TYPE_R,
  _IDC_EDIT_NET_MSEC,
  _IDC_CHECK_NET_SIMUL,
  _IDC_CHECK_NET_LOG,
  _IDC_CHECK_NET_ECHO,
  _IDC_CHECK_NET_STX,
  _IDC_CHECK_NET_ETX,
  _IDC_EDIT_WS_MSEC,
	_IDC_EDIT_WS_URL,
  _IDC_COMBO_WS_CS,
	_IDC_COMBO_WS_DISPLAY_TYPE_W,
	_IDC_COMBO_WS_DISPLAY_TYPE_R,
	_IDC_BUTTON_WS_OPEN_CLOSE,
	_IDC_EDIT_WS_WRITE,
	_IDC_CHECK_WS_CR,
	_IDC_CHECK_WS_LF,
	_IDC_BUTTON_WS_WRITE,
  _IDC_CHECK_WS_LOG,
  _IDC_CHECK_WS_ECHO,
  _IDC_CHECK_WS_SIMUL,
  _IDC_CHECK_WS_STX,
  _IDC_CHECK_WS_ETX,
  _IDC_EDIT_SERIAL_PORT,
  _IDC_EDIT_SERIAL_BAUDRATE,
  _IDC_EDIT_SERIAL_DBIT,
  _IDC_EDIT_SERIAL_SBIT,
  _IDC_EDIT_SERIAL_PBIT,
  _IDC_BUTTON_SERIAL_OPEN_CLOSE,
  _IDC_COMBO_SERIAL_DISPLAY_TYPE_W,
  _IDC_COMBO_SERIAL_DISPLAY_TYPE_R,
  _IDC_EDIT_SERIAL_WRITE,
  _IDC_BUTTON_SERIAL_WRITE,
  _IDC_CHECK_SERIAL_CR,
  _IDC_CHECK_SERIAL_LF,
  _IDC_EDIT_SERIAL_MSEC,
  _IDC_CHECK_SERIAL_LOG,
  _IDC_CHECK_SERIAL_ECHO,
  _IDC_CHECK_SERIAL_STX,
  _IDC_CHECK_SERIAL_ETX,
  _IDC_CHECK_SERIAL_SIMUL,
  _IDC_EDIT_SERIAL_PORT2,
  _IDC_EDIT_SERIAL_BAUDRATE2,
  _IDC_EDIT_SERIAL_DBIT2,
  _IDC_EDIT_SERIAL_SBIT2,
  _IDC_EDIT_SERIAL_PBIT2,
  _IDC_BUTTON_SERIAL_OPEN_CLOSE2,
  _IDC_COMBO_SERIAL_DISPLAY_TYPE_W2,
  _IDC_COMBO_SERIAL_DISPLAY_TYPE_R2,
  _IDC_EDIT_SERIAL_WRITE2,
  _IDC_BUTTON_SERIAL_WRITE2,
  _IDC_CHECK_SERIAL_CR2,
  _IDC_CHECK_SERIAL_LF2,
  _IDC_EDIT_SERIAL_MSEC2,
  _IDC_CHECK_SERIAL_LOG2,
  _IDC_CHECK_SERIAL_ECHO2,
  _IDC_CHECK_SERIAL_STX2,
  _IDC_CHECK_SERIAL_ETX2,
  _IDC_CHECK_SERIAL_ROUTER,
  _IDC_BUTTON_CLEAR,
  _IDC_LIST_READ,
  _IDC_CHECK_READ_YN,
  _IDC_EDIT_LIST_COUNT,
  _IDC_MAX_ITEM
};


#if (defined XWIN32 || defined WINCE)
#pragma pack(1)
#endif
typedef struct wMTIF
{
  wLog               log;
  _WND               item[_IDC_MAX_ITEM];
  uint8_t            read_lock;
  uint8_t            wshdr[1024];
  uint32_t           max_line;


  cnserial           __serial[2];
  cnsocket           __socket;
  cnwebsocket        __websocket;
}wMTIF;
#if (defined XWIN32 || defined WINCE)
#pragma pack()
#endif

void* wmtif_dlgproc(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam);
void* wmtif_init(HWND hwnd, wMTIF* p);


#endif