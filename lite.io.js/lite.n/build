#! /bin/bash

################################################################################
################################################################################
################################################################################
if [ $1 == "all" -o $1 == "ha32" ]
then
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=1 NODE=1 ABI=HARD make clean;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=1 NODE=1 ABI=HARD make dir;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=1 NODE=1 ABI=HARD make all;
fi

if [ $1 == "all" -o $1 == "x64" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 make all;
fi

if [ $1 == "all" -o $1 == "ha64" ]
then
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 ABI=HARD make clean;
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 ABI=HARD make dir;
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=1 NHTTPSD=1 NSERIAL=1 NWSC=1 NWSD=1 NSHM=1 NTCP=1 NTCPD=1 NTCPSD=1 OUTPUT_NAME=liblite.n DEBUG=0 NODE=1 ABI=HARD make all;
fi

exit;



if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.http.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.http.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=1 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.http.n DEBUG=0 NODE=1 make all;
postbuild liblite.http.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=1 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpd.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=1 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpd.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=1 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpd.n DEBUG=0 NODE=1 make all;
postbuild liblite.httpd.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=1 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpsd.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=1 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpsd.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=1 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.httpsd.n DEBUG=0 NODE=1 make all;
postbuild liblite.httpsd.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=1 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.serial.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=1 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.serial.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=1 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.serial.n DEBUG=0 NODE=1 make all;
postbuild liblite.serial.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=1 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsc.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=1 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsc.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=1 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsc.n DEBUG=0 NODE=1 make all;
postbuild liblite.wsc.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=1 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsd.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=1 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsd.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=1 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.wsd.n DEBUG=0 NODE=1 make all;
postbuild liblite.wsd.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=1 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.shm.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=1 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.shm.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=1 NTCP=0 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.shm.n DEBUG=0 NODE=1 make all;
postbuild liblite.shm.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=1 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.tcp.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=1 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.tcp.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=1 NTCPD=0 NTCPSD=0 OUTPUT_NAME=liblite.tcp.n DEBUG=0 NODE=1 make all;
postbuild liblite.tcp.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=1 NTCPSD=0 OUTPUT_NAME=liblite.tcpd.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=1 NTCPSD=0 OUTPUT_NAME=liblite.tcpd.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=1 NTCPSD=0 OUTPUT_NAME=liblite.tcpd.n DEBUG=0 NODE=1 make all;
postbuild liblite.tcpd.n.x64
fi

if [ $1 == "all" -o $1 == "x64a" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=1 OUTPUT_NAME=liblite.tcpsd.n DEBUG=0 NODE=1 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=1 OUTPUT_NAME=liblite.tcpsd.n DEBUG=0 NODE=1 make dir;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.a NHTTP=0 NHTTPD=0 NHTTPSD=0 NSERIAL=0 NWSC=0 NWSD=0 NSHM=0 NTCP=0 NTCPD=0 NTCPSD=1 OUTPUT_NAME=liblite.tcpsd.n DEBUG=0 NODE=1 make all;
postbuild liblite.tcpsd.n.x64
fi


################################################################################
################################################################################
################################################################################
if [ $1 == "all" -o $1 == "a32" ]
then
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make clean;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make dir;
prebuild a32;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make all;
fi

if [ $1 == "all" -o $1 == "ha32" ]
then
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=HARD make clean;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=HARD make dir;
prebuild ha32;
CROSS_COMPILE=yes ARCH_TYPE=a32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=HARD make all;
fi

if [ $1 == "all" -o $1 == "a64" ]
then
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make clean;
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make dir;
prebuild a64;
CROSS_COMPILE=yes ARCH_TYPE=a64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 ABI=SOFT make all;
fi

if [ $1 == "all" -o $1 == "x32" ]
then
CROSS_COMPILE=no ARCH_TYPE=x32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make clean;
CROSS_COMPILE=no ARCH_TYPE=x32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make dir;
prebuild x32;
CROSS_COMPILE=no ARCH_TYPE=x32 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make all;
fi

if [ $1 == "all" -o $1 == "x64" ]
then
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make clean;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make dir;
prebuild x64;
CROSS_COMPILE=no ARCH_TYPE=x64 OUTPUT_TYPE=.out OUTPUT_NAME=lite.n DEBUG=1 NODE=0 make all;
fi

